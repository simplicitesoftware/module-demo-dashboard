#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: DemoDashboard 5
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    ArrayOfDemoStats1:
      type: array
      items:
        $ref: '#/components/schemas/DemoStats1'
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    ArrayOfDemoStats2:
      type: array
      items:
        $ref: '#/components/schemas/DemoStats2'
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    DemoStats1:
      type: object
      properties:
        demoOrdStatus:
          description: Order status
          type: string
          enum:
          - P
          - H
          - V
          - D
          - C
        demoStsCount:
          description: Number of orders
          type: integer
        demoStsAmount:
          description: Ordered amount
          type: number
        row_id:
          description: Unique technical row ID
          type: string
        demoStsQuantity:
          description: Ordered quantities
          type: integer
    DemoStats2:
      type: object
      properties:
        demoStsCount:
          description: Number of orders
          type: integer
        demoStsAmount:
          description: Ordered amount
          type: number
        row_id:
          description: Unique technical row ID
          type: string
        demoPrdName:
          description: Product name
          type: string
        demoStsQuantity:
          description: Ordered quantities
          type: integer
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
openapi: 3.0.2
paths:
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/DemoStats1/{row_id}:
    post:
      summary: Create a new DemoStats1business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoStats1'
      operationId: obj-demostats1-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoStats1'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemoStats1
    get:
      summary: Get a DemoStats1 business object record
      security:
      - bearerAuth: []
      operationId: obj-demostats1-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoStats1'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemoStats1
    delete:
      summary: Delete a DemoStats1 business object record
      security:
      - bearerAuth: []
      operationId: obj-demostats1-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemoStats1
    put:
      summary: Update a DemoStats1business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoStats1'
      operationId: obj-demostats1-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoStats1'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemoStats1
  /rest/DemoStats1:
    get:
      summary: Search DemoStats1 business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-demostats1-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemoStats1'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - DemoStats1-T1
        in: query
        name: _crosstab
        description: Apply pivot table
        required: false
      - schema:
          type: boolean
        in: query
        name: _crosstabcubes
        description: Pivot table data as cubes?
        required: false
      - schema:
          type: string
          enum:
          - P
          - H
          - V
          - D
          - C
        in: query
        name: demoOrdStatus
        description: Search filter for Order status
        required: false
      - schema:
          type: integer
        in: query
        name: demoStsCount
        description: Search filter for Number of orders
        required: false
      - schema:
          type: integer
        in: query
        name: demoStsQuantity
        description: Search filter for Ordered quantities
        required: false
      - schema:
          type: number
        in: query
        name: demoStsAmount
        description: Search filter for Ordered amount
        required: false
      tags:
      - DemoStats1
  /rest/DemoStats2/{row_id}:
    post:
      summary: Create a new DemoStats2business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoStats2'
      operationId: obj-demostats2-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoStats2'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemoStats2
    get:
      summary: Get a DemoStats2 business object record
      security:
      - bearerAuth: []
      operationId: obj-demostats2-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoStats2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemoStats2
    delete:
      summary: Delete a DemoStats2 business object record
      security:
      - bearerAuth: []
      operationId: obj-demostats2-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemoStats2
    put:
      summary: Update a DemoStats2business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoStats2'
      operationId: obj-demostats2-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoStats2'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemoStats2
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
  /rest/DemoStats2:
    get:
      summary: Search DemoStats2 business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-demostats2-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemoStats2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: demoPrdName
        description: Search filter for Product name
        required: false
      - schema:
          type: integer
        in: query
        name: demoStsCount
        description: Search filter for Number of orders
        required: false
      - schema:
          type: integer
        in: query
        name: demoStsQuantity
        description: Search filter for Ordered quantities
        required: false
      - schema:
          type: number
        in: query
        name: demoStsAmount
        description: Search filter for Ordered amount
        required: false
      tags:
      - DemoStats2
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module DemoDashboard
  title: DemoDashboard
  version: '5'
tags:
- name: DemoStats1
  description: Statistics per statuses
- name: DemoStats2
  description: Statistics per product
